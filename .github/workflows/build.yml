name: ChromiumDriver CI
on: [push, pull_request]

jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.generate-matrix.outputs.versions }}
    steps:
    - name: Select 3 most recent LTS versions of Node.js
      id: generate-matrix
      run: echo "versions=$(curl -s https://endoflife.date/api/nodejs.json | jq -c '[[.[] | select(.lts != false)][:3] | .[].cycle | tonumber]')" >> "$GITHUB_OUTPUT"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        uses: bahmutov/npm-install@1a235c31658a322a3b024444759650ee6345c26d # tag=v1
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      - name: ESLint
        run: npm run lint
      - name: Validate Renovate Config
        uses: rinchsan/renovate-config-validator@1ea1e8514f6a33fdd71c40b0a5fa3512b9e7b936 # tag=v0
        with:
          pattern: '{.renovaterc.json,renovate/default.json}'
  test:
    needs: 
    - lint
    - prepare_matrix
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ${{ fromJSON(needs.prepare_matrix.outputs.versions) }}
    name: Tests
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        uses: bahmutov/npm-install@1a235c31658a322a3b024444759650ee6345c26d # tag=v1
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
      - name: Print Chrome version
        if: ${{ runner.os != 'macOS' }}
        run: chrome --version
      - name: Print Chrome version (mac)
        if: ${{ runner.os == 'macOS' }}
        run: chromium --version
      - name: Start Display
        shell: bash
        run: |
          if ["$RUNNER_OS" == "Windows"]; then
            echo "Not starting display since on Windows"
          else
            DISPLAY=:99 sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          fi
      - name: Run smoke, unit & E2E tests
        shell: bash
        run: |
          if ["$RUNNER_OS" == "Windows"]; then
            npm run test:ci
          else
            DISPLAY=:99 npm run test:ci
          fi
  release:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: lts/*
    - run: npm install
      name: Install dependencies
    - run: npm run build
      name: Run build
    - run: |
        rm -rf package-lock.json
        npm prune --production
        rm -rf node_modules/appium
      name: Remove dev dependencies and appium peer dependencies
    - run: npm shrinkwrap
      name: Create shrinkwrap
    - run: npm install --only=dev
      name: Install dev dependencies for the release
    - run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      name: Release
